{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/ts/utils.ts","../../src/components/Word.svelte","../../src/components/Playground.svelte","../../src/components/StartMenu.svelte","../../src/components/EndScreen.svelte","../../node_modules/robot3/machine.js","../../src/ts/types.ts","../../src/ts/Game.ts","../../src/components/Game.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.4' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","const WORDS_URL = \"assets/data/words.json\";\n/**\n * Get the words list (from local storage or url), and store it if not stored\n *\n * @returns a Promise, which resolves in the words list (array of string)\n */\nexport async function getWords() {\n    let wordsList = JSON.parse(localStorage.getItem('words'));\n    if (!wordsList) {\n        wordsList = await fetchWordsList();\n        localStorage.setItem('words', JSON.stringify(wordsList));\n    }\n    return wordsList;\n}\n/**\n * Fetch the words list\n *\n * @returns a Promise, which resolves in the words list (array of string)\n */\nasync function fetchWordsList() {\n    return fetch(WORDS_URL).then(data => data.json());\n}\n/**\n * Get the last score and best score from previous games. If no scores were\n * found, set their values to 0\n *\n * @returns the scores\n */\nexport function getScores() {\n    const last = parseInt(localStorage.getItem('last')) || 0;\n    const best = parseInt(localStorage.getItem('best')) || last;\n    return { best, last };\n}\n/**\n * Save the score into the local storage\n *\n * @param score the score\n */\nexport function saveScore(score) {\n    const localBest = parseInt(localStorage.getItem('best')) || 0;\n    const best = Math.max(score, localBest);\n    localStorage.setItem('best', best.toString());\n    localStorage.setItem('last', score.toString());\n}\n","<script lang=\"ts\">\n    import type { WordProps } from \"../ts/types\";\n    import { fade } from \"svelte/transition\";\n\n    export let props: WordProps;\n\n    const { value, x, duration } = props;\n    const offset = (x + 100) / 2;\n\n    const style = `\n        left: ${offset}%;\n        animation-duration: ${duration}s;\n        --transX: translateX(${-offset}%);\n    `;\n</script>\n\n<style>\n    .word {\n        position: absolute;\n        padding: 0.8em 1em;\n        text-transform: uppercase;\n        user-select: none;\n        animation: falling forwards linear;\n    }\n\n    .word::after {\n        content: \"\";\n        position: absolute;\n        background: var(--color-secondary);\n        opacity: 0.1;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: var(--radius-high);\n    }\n\n    @keyframes falling {\n        from {\n            top: 0;\n            transform: var(--transX) translateY(-100%);\n        }\n        to {\n            top: 100%;\n            transform: var(--transX) translateY(0);\n        }\n    }\n</style>\n\n<div out:fade>\n    <div class=\"word\" {style}>{value}</div>\n</div>\n","<script lang=\"ts\">\n    import { onMount } from \"svelte/internal\";\n    import type Game from \"../ts/Game\";\n    import type { WordProps } from \"../ts/types\";\n    import Word from \"./Word.svelte\";\n    import { fade } from \"svelte/transition\";\n\n    export let game: Game;\n\n    let score: number = 0;\n    let typedWord: string = \"\";\n    let input: HTMLInputElement;\n    let invalidInput: Boolean = false;\n    let fallingWords: WordProps[] = [];\n\n    game.registerWordsListener((updatedList: WordProps[]) => {\n        fallingWords = updatedList;\n    });\n\n    game.registerScoreListener((newScore: number) => {\n        score = newScore;\n    });\n\n    onMount(() => handleBlur());\n\n    const handleBlur = () => input.focus();\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n        invalidInput = false;\n        if (e.key == \"Enter\") {\n            if (game.handle(typedWord)) typedWord = \"\";\n            else invalidInput = true;\n        }\n    };\n</script>\n\n<style>\n    .playground {\n        height: 100vh;\n    }\n\n    .words-container {\n        height: 100vh;\n        width: 100vw;\n    }\n\n    .bottom-bar {\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1em;\n    }\n\n    .input {\n        padding: 0.6em 0;\n        background: var(--color-primary);\n        text-transform: uppercase;\n        text-align: center;\n        font-size: 1.1em;\n        border-radius: var(--radius-high);\n        background: var(--color-secondary-transparent);\n        transition: transform var(--transition);\n    }\n\n    .input.invalid {\n        animation: invalid 0.2s forwards linear;\n    }\n\n    .score {\n        opacity: 0.9;\n        padding: 0.5em;\n    }\n\n    @keyframes invalid {\n        0% {\n            transform: translateX(0);\n        }\n        25% {\n            transform: translateX(-10%);\n        }\n        75% {\n            transform: translateX(10%);\n        }\n        100% {\n            transform: translateX(0);\n        }\n    }\n</style>\n\n<div class=\"playground\" transition:fade={{ duration: 500 }}>\n    <div class=\"words-container\">\n        {#each fallingWords as props (props.id)}\n            <Word {props} />\n        {/each}\n    </div>\n    <div class=\"bottom-bar\">\n        <div class=\"score\">Score: {score}</div>\n        <input\n            class=\"input\"\n            type=\"text\"\n            spellcheck={false}\n            bind:value={typedWord}\n            bind:this={input}\n            on:keyup={handleKeyUp}\n            on:blur={handleBlur}\n            class:invalid={invalidInput} />\n    </div>\n</div>\n","<script lang=\"ts\">\n    import { fade } from \"svelte/transition\";\n    import { getScores } from \"../ts/utils\";\n\n    export let scores = getScores();\n\n    const { best, last } = scores;\n\n    let hidden = false;\n</script>\n\n<style>\n    #start-menu {\n        transition: var(--transition);\n    }\n\n    #start-menu.hidden #play {\n        transform: translate(-50%, -50%) scale(10);\n    }\n\n    #start-menu.hidden #scores {\n        transform: translateY(-100%);\n    }\n\n    #scores {\n        flex-direction: column;\n        padding: 20px;\n        position: absolute;\n        top: 0;\n        left: 0;\n        columns: 2;\n        column-rule: 1px solid var(--color-secondary);\n        transition: var(--transition);\n    }\n\n    #play {\n        position: absolute;\n        background: var(--color-secondary-transparent);\n        width: 100px;\n        height: 100px;\n        border-radius: var(--radius-high);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        transition: var(--transition);\n        font-size: 1.2em;\n    }\n\n    #play:hover {\n        transform: translate(-50%, -50%) scale(1.1);\n    }\n</style>\n\n<div id=\"start-menu\" class:hidden transition:fade={{ duration: 500 }}>\n    <div id=\"scores\">\n        <div>Best score: {best}</div>\n        <div>Last score: {last}</div>\n    </div>\n    <button id=\"play\" on:click>PLAY</button>\n</div>\n","<script lang=\"ts\">\n    import type { Scores } from \"../ts/types\";\n    import { createEventDispatcher } from \"svelte\";\n\n    export let scores: Scores;\n\n    const { last, best } = scores;\n\n    const dispatch = createEventDispatcher();\n</script>\n\n<style>\n    .wrapper {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        position: absolute;\n        height: 100%;\n        width: 100%;\n    }\n\n    .btn {\n        background: var(--color-secondary);\n        border-radius: var(--radius-high);\n        padding: 0.6em 1em;\n        font-weight: bold;\n        font-size: 1.05em;\n        color: var(--color-primary);\n        margin: 0.5em;\n        transition: var(--transition);\n        border: 0.2em solid var(--color-secondary);\n    }\n\n    .btn:hover {\n        color: var(--color-secondary);\n        background: transparent;\n    }\n</style>\n\n<div class=\"wrapper\">\n    <h1>Game Over!</h1>\n\n    <h2>Your score: {last}</h2>\n    <p>Best score: {best}</p>\n\n    <div>\n        <button class=\"btn\" on:click={() => dispatch('menu')}>Menu</button>\n        <button class=\"btn\" on:click={() => dispatch('playagain')}>Play again</button>\n    </div>\n</div>\n","function valueEnumerable(value) {\n  return { enumerable: true, value };\n}\n\nfunction valueEnumerableWritable(value) {\n  return { enumerable: true, writable: true, value };\n}\n\nexport let d = {};\nlet truthy = () => true;\nlet empty = () => ({});\nlet identity = a => a;\nlet callBoth = (par, fn, self, args) => par.apply(self, args) && fn.apply(self, args);\nlet callForward = (par, fn, self, [a, b]) => fn.call(self, par.call(self, a, b), b);\nlet create = (a, b) => Object.freeze(Object.create(a, b));\n\nfunction stack(fns, def, caller) {\n  return fns.reduce((par, fn) => {\n    return function(...args) {\n      return caller(par, fn, this, args);\n    };\n  }, def);\n}\n\nfunction fnType(fn) {\n  return create(this, { fn: valueEnumerable(fn) });\n}\n\nlet reduceType = {};\nexport let reduce = fnType.bind(reduceType);\nexport let action = fn => reduce((ctx, ev) => !!~fn(ctx, ev) && ctx);\n\nlet guardType = {};\nexport let guard = fnType.bind(guardType);\n\nfunction filter(Type, arr) {\n  return arr.filter(value => Type.isPrototypeOf(value));\n}\n\nfunction makeTransition(from, to, ...args) {\n  let guards = stack(filter(guardType, args).map(t => t.fn), truthy, callBoth);\n  let reducers = stack(filter(reduceType, args).map(t => t.fn), identity, callForward);\n  return create(this, {\n    from: valueEnumerable(from),\n    to: valueEnumerable(to),\n    guards: valueEnumerable(guards),\n    reducers: valueEnumerable(reducers)\n  });\n}\n\nlet transitionType = {};\nlet immediateType = {};\nexport let transition = makeTransition.bind(transitionType);\nexport let immediate = makeTransition.bind(immediateType, null);\n\nfunction enterImmediate(machine, service, event) {\n  return transitionTo(service, machine, event, this.immediates) || machine;\n}\n\nfunction transitionsToMap(transitions) {\n  let m = new Map();\n  for(let t of transitions) {\n    if(!m.has(t.from)) m.set(t.from, []);\n    m.get(t.from).push(t);\n  }\n  return m;\n}\n\nlet stateType = { enter: identity };\nexport function state(...args) {\n  let transitions = filter(transitionType, args);\n  let immediates = filter(immediateType, args);\n  let desc = {\n    final: valueEnumerable(args.length === 0),\n    transitions: valueEnumerable(transitionsToMap(transitions))\n  };\n  if(immediates.length) {\n    desc.immediates = valueEnumerable(immediates);\n    desc.enter = valueEnumerable(enterImmediate);\n  }\n  return create(stateType, desc);\n}\n\nlet invokePromiseType = {\n  enter(machine, service, event) {\n    this.fn.call(service, service.context, event)\n      .then(data => service.send({ type: 'done', data }))\n      .catch(error => service.send({ type: 'error', error }));\n    return machine;\n  }\n};\nlet invokeMachineType = {\n  enter(machine, service, event) {\n    service.child = interpret(this.machine, s => {\n      service.onChange(s);\n      if(service.child == s && s.machine.state.value.final) {\n        delete service.child;\n        service.send({ type: 'done', data: s.context });\n      }\n    }, service.context, event);\n    if(service.child.machine.state.value.final) {\n      let data = service.child.context;\n      delete service.child;\n      return transitionTo(service, machine, { type: 'done', data }, this.transitions.get('done'));\n    }\n    return machine;\n  }\n};\nexport function invoke(fn, ...transitions) {\n  let t = valueEnumerable(transitionsToMap(transitions));\n  return machine.isPrototypeOf(fn) ?\n    create(invokeMachineType, {\n      machine: valueEnumerable(fn),\n      transitions: t\n    }) :\n    create(invokePromiseType, {\n      fn: valueEnumerable(fn),\n      transitions: t\n    });\n}\n\nlet machine = {\n  get state() {\n    return {\n      name: this.current,\n      value: this.states[this.current]\n    };\n  }\n};\n\nexport function createMachine(current, states, contextFn = empty) {\n  if(typeof current !== 'string') {\n    contextFn = states || empty;\n    states = current;\n    current = Object.keys(states)[0];\n  }\n  if(d._create) d._create(current, states);\n  return create(machine, {\n    context: valueEnumerable(contextFn),\n    current: valueEnumerable(current),\n    states: valueEnumerable(states)\n  });\n}\n\nfunction transitionTo(service, machine, fromEvent, candidates) {\n  let { context } = service;\n  for(let { to, guards, reducers } of candidates) {  \n    if(guards(context, fromEvent)) {\n      service.context = reducers.call(service, context, fromEvent);\n\n      let original = machine.original || machine;\n      let newMachine = create(original, {\n        current: valueEnumerable(to),\n        original: { value: original }\n      });\n\n      let state = newMachine.state.value;\n      return state.enter(newMachine, service, fromEvent);\n    }\n  }\n}\n\nfunction send(service, event) {\n  let eventName = event.type || event;\n  let { machine } = service;\n  let { value: state } = machine.state;\n  \n  if(state.transitions.has(eventName)) {\n    return transitionTo(service, machine, event, state.transitions.get(eventName)) || machine;\n  }\n  return machine;\n}\n\nlet service = {\n  send(event) {\n    this.machine = send(this, event);\n    \n    // TODO detect change\n    this.onChange(this);\n  }\n};\n\nexport function interpret(machine, onChange, initialContext, event) {\n  let s = Object.create(service, {\n    machine: valueEnumerableWritable(machine),\n    context: valueEnumerableWritable(machine.context(initialContext, event)),\n    onChange: valueEnumerable(onChange)\n  });\n  s.send = s.send.bind(s);\n  s.machine = s.machine.state.value.enter(s.machine, s, event);\n  return s;\n} \n","import { transition, state, createMachine } from 'robot3';\nexport const GameMachine = createMachine('IDLE', {\n    IDLE: state(transition('start', 'PLAYING')),\n    PLAYING: state(transition('pause', 'PAUSED'), transition('end', 'FINISHED')),\n    PAUSED: state(transition('resume', 'PLAY')),\n    FINISHED: state()\n});\n","import { interpret } from 'robot3';\nimport { GameMachine } from './types';\nclass Game {\n    constructor(wordsList, stateListener) {\n        this._fallTime = 2 * 1000;\n        this._score = 0;\n        this._fallingWords = [];\n        this._wordsList = wordsList;\n        this.state = interpret(GameMachine, stateListener);\n    }\n    start() {\n        this.state.send('start');\n        this._interval = setInterval(this.addWord.bind(this), this._fallTime);\n    }\n    get fallingWords() {\n        return this._fallingWords;\n    }\n    set fallingWords(fallingWords) {\n        this._fallingWords = fallingWords;\n        this._wordsListener(fallingWords);\n    }\n    get score() {\n        return this._score;\n    }\n    set score(x) {\n        this._score = x;\n        this._scoreListener(x);\n    }\n    handle(word) {\n        const valid = this.isValid(word);\n        if (valid) {\n            const removed = this.removeWord(word);\n            this.applyScore(removed);\n            clearInterval(removed.timeout);\n        }\n        return valid;\n    }\n    isValid(word) {\n        return this.fallingWords.some(w => w.value == word);\n    }\n    removeWord(word) {\n        const index = this.fallingWords.findIndex(w => w.value == word);\n        const toRemove = this.fallingWords[index];\n        this.fallingWords = this.fallingWords.filter((_, i) => i != index);\n        return toRemove;\n    }\n    applyScore(word) {\n        this.score += Math.round(word.value.length * (100 / word.duration));\n    }\n    addWord() {\n        const newWord = this.generateWord();\n        this.fallingWords = [...this.fallingWords, newWord];\n    }\n    generateWord() {\n        const i = Math.floor(Math.random() * this._wordsList.length);\n        const value = this._wordsList[i];\n        const x = this.randomPos();\n        const duration = 10;\n        return {\n            x,\n            value,\n            duration,\n            id: value + x,\n            timeout: setTimeout(this.loose.bind(this), duration * 1000)\n        };\n    }\n    loose() {\n        this.state.send('end');\n        clearInterval(this._interval);\n        for (let word of this.fallingWords)\n            this.removeWord(word.value);\n    }\n    randomPos() {\n        return this.randint(-100, 100);\n    }\n    randint(lowerBound, upperBound) {\n        const delta = upperBound - lowerBound;\n        return Math.round(Math.random() * delta) + lowerBound;\n    }\n    registerWordsListener(listener) {\n        this._wordsListener = listener;\n    }\n    registerScoreListener(listener) {\n        this._scoreListener = listener;\n    }\n}\nexport default Game;\n","<script lang=\"ts\">\n    import Playground from \"./Playground.svelte\";\n    import StartMenu from \"./StartMenu.svelte\";\n    import EndScreen from \"./EndScreen.svelte\";\n    import Game from \"../ts/Game\";\n    import type { GameService, States, words } from \"../ts/types\";\n    import { getScores, saveScore } from \"../ts/utils\";\n\n    export let wordsList: words;\n\n    let state: States = \"IDLE\";\n\n    const handleStateChange = (gs: GameService) => {\n        state = gs.machine.current;\n\n        if (state == \"FINISHED\") saveScore(game.score);\n    };\n\n    let game = new Game(wordsList, handleStateChange);\n\n    const handleMenu = () => {\n        state = \"IDLE\";\n        game = new Game(wordsList, handleStateChange);\n    };\n\n    const handlePlayAgain = () => {\n        game = new Game(wordsList, handleStateChange);\n        game.start();\n    };\n</script>\n\n{#if state == 'IDLE'}\n    <StartMenu on:click={() => game.start()} />\n{:else if state == 'PLAYING'}\n    <Playground {game} />\n{:else if state == 'FINISHED'}\n    <EndScreen\n        scores={getScores()}\n        on:menu={handleMenu}\n        on:playagain={handlePlayAgain} />\n{/if}\n","<script lang=\"ts\">\n    import Loader from \"./components/Loader.svelte\";\n    import { getWords } from \"./ts/utils\";\n    import Game from \"./components/Game.svelte\";\n\n    const wordsPromise = getWords();\n</script>\n\n<style>\n    :global(:root) {\n        --color-primary: #3498db;\n        --color-secondary: #fff;\n        --color-secondary-transparent: rgba(255, 255, 255, 0.1);\n        --font-family: \"Montserrat\";\n        --transition: 0.3s;\n        --radius-high: 500em;\n    }\n\n    :global(*) {\n        box-sizing: border-box;\n    }\n\n    :global(body) {\n        background: var(--color-primary);\n        margin: 0;\n        font-family: var(--font-family), sans-serif;\n        color: var(--color-secondary);\n        overflow: hidden;\n    }\n\n    :global(button) {\n        border: none;\n        outline: none;\n        cursor: pointer;\n    }\n\n    :global(button, input) {\n        color: var(--color-secondary);\n        outline: none;\n        border: none;\n    }\n\n    :global(.hidden) {\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .error {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        text-align: center;\n    }\n</style>\n\n{#await wordsPromise}\n    <Loader />\n{:then wordsList}\n    <Game {wordsList} />\n{:catch e}\n    <p class=\"error\">An error occurred: {e.message}</p>\n{/await}\n","import App from \"./App.svelte\";\nnew App({\n    target: document.body\n});\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","$$","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_out_transition","params","animation_name","config","running","group","go","easing","tick","css","start_time","end_time","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","Math","abs","start","end","outro_and_destroy_block","lookup","key","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","fade","linear","getComputedStyle","opacity","WORDS_URL","async","getWords","wordsList","JSON","parse","localStorage","getItem","fetch","json","fetchWordsList","setItem","stringify","getScores","last","parseInt","best","offset","id","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","set","will_move","did_move","first","new_block","old_block","new_key","old_key","wholeText","game","score","typedWord","invalidInput","fallingWords","registerWordsListener","updatedList","registerScoreListener","newScore","handleBlur","focus","handle","hidden","scores","slice","call","createEventDispatcher","valueEnumerable","enumerable","valueEnumerableWritable","writable","truthy","callBoth","par","self","args","apply","callForward","freeze","stack","def","caller","reduce","fnType","reduceType","guardType","bind","Type","arr","isPrototypeOf","makeTransition","to","guards","reducers","transitionType","immediateType","transition","enterImmediate","machine","service","transitionTo","immediates","transitionsToMap","transitions","stateType","enter","state","desc","final","current","states","fromEvent","candidates","original","newMachine","eventName","send","onChange","GameMachine","contextFn","_create","createMachine","IDLE","PLAYING","PAUSED","FINISHED","Game","stateListener","_fallTime","_score","_fallingWords","_wordsList","initialContext","s","interpret","_interval","setInterval","addWord","_wordsListener","_scoreListener","word","valid","isValid","removed","removeWord","applyScore","clearInterval","timeout","some","w","findIndex","toRemove","_","round","newWord","generateWord","floor","random","randomPos","setTimeout","loose","randint","lowerBound","upperBound","delta","listener","handleStateChange","gs","localBest","max","toString","saveScore","message","info","token","resolved","undefined","needs_flush","blocks","mount","error","catch","hasCatch","pending","body"],"mappings":"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"}