{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/ts/utils.ts","../../src/components/Word.svelte","../../node_modules/svelte-icons/components/IconBase.svelte","../../node_modules/svelte-icons/md/MdStars.svelte","../../src/components/Playground.svelte","../../node_modules/svelte-icons/md/MdPlayArrow.svelte","../../node_modules/svelte-icons/fa/FaMedal.svelte","../../src/components/StartMenu.svelte","../../node_modules/svelte-icons/md/MdMenu.svelte","../../node_modules/svelte-icons/fa/FaRegSadCry.svelte","../../src/components/EndScreen.svelte","../../node_modules/robot3/machine.js","../../src/ts/types.ts","../../src/ts/Game.ts","../../src/components/Game.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.7' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","const WORDS_URL = \"assets/data/words.json\";\n/**\n * Get the words list (from local storage or url), and store it if not stored\n *\n * @returns a Promise, which resolves in the words list (array of string)\n */\nexport async function getWords() {\n    let wordsList = JSON.parse(localStorage.getItem('words'));\n    if (!wordsList) {\n        wordsList = await fetchWordsList();\n        localStorage.setItem('words', JSON.stringify(wordsList));\n    }\n    return wordsList;\n}\n/**\n * Fetch the words list\n *\n * @returns a Promise, which resolves in the words list (array of string)\n */\nasync function fetchWordsList() {\n    return fetch(WORDS_URL).then(data => data.json());\n}\n/**\n * Get the last score and best score from previous games. If no scores were\n * found, set their values to 0\n *\n * @returns the scores\n */\nexport function getScores() {\n    const last = parseInt(localStorage.getItem('last')) || 0;\n    const best = parseInt(localStorage.getItem('best')) || last;\n    return { best, last };\n}\n/**\n * Save the score into the local storage\n *\n * @param score the score\n */\nexport function saveScore(score) {\n    const localBest = parseInt(localStorage.getItem('best')) || 0;\n    const best = Math.max(score, localBest);\n    localStorage.setItem('best', best.toString());\n    localStorage.setItem('last', score.toString());\n}\n","<script lang=\"ts\">\n    import type { WordProps } from \"../ts/types\";\n    import { fade } from \"svelte/transition\";\n\n    export let props: WordProps;\n\n    const { value, x, duration } = props;\n    const offset = (x + 100) / 2;\n\n    const style = `\n        left: ${offset}%;\n        animation-duration: ${duration}s;\n        --transX: translateX(${-offset}%);\n    `;\n</script>\n\n<style>\n    .word {\n        position: absolute;\n        padding: 0.8em 1em;\n        text-transform: uppercase;\n        user-select: none;\n        animation: falling forwards linear;\n    }\n\n    .word::after {\n        content: \"\";\n        position: absolute;\n        background: var(--color-secondary);\n        opacity: 0.1;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: var(--radius-high);\n    }\n\n    @keyframes falling {\n        from {\n            top: 0;\n            transform: var(--transX) translateY(-100%);\n        }\n        to {\n            top: 100%;\n            transform: var(--transX) translateY(0);\n        }\n    }\n</style>\n\n<div out:fade>\n    <div class=\"word\" {style}>{value}</div>\n</div>\n","<script>\n  export let title = null;\n  export let viewBox;\n</script>\n\n<style>\n  svg {\n    stroke: currentColor;\n    fill: currentColor;\n    stroke-width: 0;\n    width: 100%;\n    height: auto;\n    max-height: 100%;\n  }  \n</style>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" {viewBox}>\n  {#if title}\n    <title>{title}</title>\n  {/if}\n  <slot />\n</svg>\n","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z\" />\n        </IconBase>\n      ","<script lang=\"ts\">\n    import { onMount } from \"svelte/internal\";\n    import type Game from \"../ts/Game\";\n    import type { WordProps } from \"../ts/types\";\n    import Word from \"./Word.svelte\";\n    import { fade } from \"svelte/transition\";\n    import MdStars from \"svelte-icons/md/MdStars.svelte\";\n    import Icon from \"./Icon.svelte\";\n\n    export let game: Game;\n\n    let score: number = 0;\n    let typedWord: string = \"\";\n    let input: HTMLInputElement;\n    let invalidInput: Boolean = false;\n    let fallingWords: Array<WordProps> = [];\n\n    game.registerWordsListener((updatedList: Array<WordProps>) => {\n        fallingWords = updatedList;\n    });\n\n    game.registerScoreListener((newScore: number) => {\n        score = newScore;\n    });\n\n    onMount(() => handleBlur());\n\n    const handleBlur = () => input.focus();\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n        invalidInput = false;\n        if (e.key == \"Enter\") {\n            if (game.handle(typedWord)) typedWord = \"\";\n            else invalidInput = true;\n        }\n    };\n</script>\n\n<style>\n    .playground {\n        height: 100vh;\n    }\n\n    .words-container {\n        height: 100vh;\n        width: 100vw;\n    }\n\n    .bottom-bar {\n        position: absolute;\n        bottom: 0;\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        padding: 1em;\n    }\n\n    .input {\n        padding: 0.6em 0;\n        background: var(--color-primary);\n        text-transform: uppercase;\n        text-align: center;\n        font-size: 1.1em;\n        border-radius: var(--radius-high);\n        background: var(--color-secondary-transparent);\n        transition: transform var(--transition);\n    }\n\n    .input.invalid {\n        animation: invalid 0.2s forwards linear;\n    }\n\n    .score {\n        opacity: 0.9;\n        padding: 0.5em;\n    }\n\n    @keyframes invalid {\n        0% {\n            transform: translateX(0);\n        }\n        25% {\n            transform: translateX(-10%);\n        }\n        75% {\n            transform: translateX(10%);\n        }\n        100% {\n            transform: translateX(0);\n        }\n    }\n</style>\n\n<div class=\"playground\" transition:fade={{ duration: 500 }}>\n    <div class=\"words-container\">\n        {#each fallingWords as props (props.id)}\n            <Word {props} />\n        {/each}\n    </div>\n    <div class=\"bottom-bar\">\n        <div class=\"score\">\n            <Icon>\n                <MdStars />\n            </Icon>\n            Score:\n            {score}\n        </div>\n        <input\n            class=\"input\"\n            type=\"text\"\n            spellcheck={false}\n            bind:value={typedWord}\n            bind:this={input}\n            on:keyup={handleKeyUp}\n            on:blur={handleBlur}\n            class:invalid={invalidInput} />\n    </div>\n</div>\n","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M8 5v14l11-7z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 512 512\" {...$$props}>\n          <path d=\"M223.75 130.75L154.62 15.54A31.997 31.997 0 0 0 127.18 0H16.03C3.08 0-4.5 14.57 2.92 25.18l111.27 158.96c29.72-27.77 67.52-46.83 109.56-53.39zM495.97 0H384.82c-11.24 0-21.66 5.9-27.44 15.54l-69.13 115.21c42.04 6.56 79.84 25.62 109.56 53.38L509.08 25.18C516.5 14.57 508.92 0 495.97 0zM256 160c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm92.52 157.26l-37.93 36.96 8.97 52.22c1.6 9.36-8.26 16.51-16.65 12.09L256 393.88l-46.9 24.65c-8.4 4.45-18.25-2.74-16.65-12.09l8.97-52.22-37.93-36.96c-6.82-6.64-3.05-18.23 6.35-19.59l52.43-7.64 23.43-47.52c2.11-4.28 6.19-6.39 10.28-6.39 4.11 0 8.22 2.14 10.33 6.39l23.43 47.52 52.43 7.64c9.4 1.36 13.17 12.95 6.35 19.59z\" />\n        </IconBase>\n      ","<script lang=\"ts\">\n    import { fade } from \"svelte/transition\";\n    import { getScores } from \"../ts/utils\";\n    import { createEventDispatcher } from \"svelte\";\n    import PlayCircle from \"svelte-icons/md/MdPlayArrow.svelte\";\n    import FaMedal from \"svelte-icons/fa/FaMedal.svelte\";\n    import Icon from \"./Icon.svelte\";\n\n    export let scores = getScores();\n\n    const { best, last } = scores;\n    const dispatch = createEventDispatcher();\n\n    let hidden = false;\n</script>\n\n<style>\n    #start-menu {\n        transition: var(--transition);\n    }\n\n    #start-menu.hidden #play {\n        transform: translate(-50%, -50%) scale(10);\n    }\n\n    #start-menu.hidden #scores {\n        transform: translateY(-100%);\n    }\n\n    #scores {\n        flex-direction: column;\n        padding: 20px;\n        position: absolute;\n        top: 0;\n        left: 0;\n        columns: 2;\n        column-rule: 1px solid var(--color-secondary);\n        transition: var(--transition);\n    }\n\n    #play {\n        display: flex;\n        position: absolute;\n        background: var(--color-secondary-transparent);\n        padding: 20px;\n        border-radius: var(--radius-high);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        transition: var(--transition);\n        font-size: 2em;\n    }\n\n    #play:hover {\n        transform: translate(-50%, -50%) scale(1.1);\n    }\n</style>\n\n<div id=\"start-menu\" class:hidden transition:fade={{ duration: 500 }}>\n    <div id=\"scores\">\n        <div>\n            <Icon>\n                <FaMedal />\n            </Icon>\n            Best score:\n            <strong>{best}</strong>\n        </div>\n        <div>Last score: <strong>{last}</strong></div>\n    </div>\n    <button id=\"play\" on:click={() => dispatch('start')}>\n        <Icon>\n            <PlayCircle />\n        </Icon>\n    </button>\n</div>\n","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 24 24\" {...$$props}>\n          <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n        </IconBase>\n      ","<script>\n        import IconBase from '../components/IconBase.svelte';\n        </script>\n        <IconBase viewBox=\"0 0 496 512\" {...$$props}>\n          <path d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm144 386.4V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v151.4C315.5 447 282.8 456 248 456s-67.5-9-96-24.6V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v114.4c-34.6-36-56-84.7-56-138.4 0-110.3 89.7-200 200-200s200 89.7 200 200c0 53.7-21.4 102.5-56 138.4zM205.8 234.5c4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 4.4 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.3 7.9 4.8 13.7 1.6zM344 180c-25.7 0-55.9 16.9-59.8 42.1-.8 5 1.7 10 6.1 12.4 4.5 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.2 8 4.7 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-3.9-25.2-34.1-42.1-59.8-42.1zm-96 92c-30.9 0-56 28.7-56 64s25.1 64 56 64 56-28.7 56-64-25.1-64-56-64z\" />\n        </IconBase>\n      ","<script lang=\"ts\">\n    import type { Scores } from \"../ts/types\";\n    import { createEventDispatcher } from \"svelte\";\n    import PlayCircle from \"svelte-icons/md/MdPlayArrow.svelte\";\n    import MdMenu from \"svelte-icons/md/MdMenu.svelte\";\n    import FaRegSadCry from \"svelte-icons/fa/FaRegSadCry.svelte\";\n    import Icon from \"./Icon.svelte\";\n\n    export let scores: Scores;\n\n    const { last, best } = scores;\n\n    const dispatch = createEventDispatcher();\n</script>\n\n<style>\n    .wrapper {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        position: absolute;\n        height: 100%;\n        width: 100%;\n    }\n\n    .btn {\n        background: var(--color-secondary);\n        border-radius: var(--radius-high);\n        padding: 0.6em 1em;\n        font-weight: bold;\n        font-size: 1.05em;\n        color: var(--color-primary);\n        margin: 0.5em;\n        transition: var(--transition);\n        border: 0.2em solid var(--color-secondary);\n    }\n\n    .btn:hover {\n        color: var(--color-secondary);\n        background: transparent;\n    }\n</style>\n\n<div class=\"wrapper\">\n    <h1>\n        <Icon>\n            <FaRegSadCry />\n        </Icon>\n        Game Over!\n    </h1>\n\n    <h2>Your score: {last}</h2>\n    <p>Best score: {best}</p>\n\n    <div>\n        <button class=\"btn\" on:click={() => dispatch('menu')}>\n            <Icon>\n                <MdMenu />\n            </Icon>\n            Menu\n        </button>\n        <button class=\"btn\" on:click={() => dispatch('playagain')}>\n            <Icon>\n                <PlayCircle />\n            </Icon>\n            Play again\n        </button>\n    </div>\n</div>\n","function valueEnumerable(value) {\n  return { enumerable: true, value };\n}\n\nfunction valueEnumerableWritable(value) {\n  return { enumerable: true, writable: true, value };\n}\n\nexport let d = {};\nlet truthy = () => true;\nlet empty = () => ({});\nlet identity = a => a;\nlet callBoth = (par, fn, self, args) => par.apply(self, args) && fn.apply(self, args);\nlet callForward = (par, fn, self, [a, b]) => fn.call(self, par.call(self, a, b), b);\nlet create = (a, b) => Object.freeze(Object.create(a, b));\n\nfunction stack(fns, def, caller) {\n  return fns.reduce((par, fn) => {\n    return function(...args) {\n      return caller(par, fn, this, args);\n    };\n  }, def);\n}\n\nfunction fnType(fn) {\n  return create(this, { fn: valueEnumerable(fn) });\n}\n\nlet reduceType = {};\nexport let reduce = fnType.bind(reduceType);\nexport let action = fn => reduce((ctx, ev) => !!~fn(ctx, ev) && ctx);\n\nlet guardType = {};\nexport let guard = fnType.bind(guardType);\n\nfunction filter(Type, arr) {\n  return arr.filter(value => Type.isPrototypeOf(value));\n}\n\nfunction makeTransition(from, to, ...args) {\n  let guards = stack(filter(guardType, args).map(t => t.fn), truthy, callBoth);\n  let reducers = stack(filter(reduceType, args).map(t => t.fn), identity, callForward);\n  return create(this, {\n    from: valueEnumerable(from),\n    to: valueEnumerable(to),\n    guards: valueEnumerable(guards),\n    reducers: valueEnumerable(reducers)\n  });\n}\n\nlet transitionType = {};\nlet immediateType = {};\nexport let transition = makeTransition.bind(transitionType);\nexport let immediate = makeTransition.bind(immediateType, null);\n\nfunction enterImmediate(machine, service, event) {\n  return transitionTo(service, machine, event, this.immediates) || machine;\n}\n\nfunction transitionsToMap(transitions) {\n  let m = new Map();\n  for(let t of transitions) {\n    if(!m.has(t.from)) m.set(t.from, []);\n    m.get(t.from).push(t);\n  }\n  return m;\n}\n\nlet stateType = { enter: identity };\nexport function state(...args) {\n  let transitions = filter(transitionType, args);\n  let immediates = filter(immediateType, args);\n  let desc = {\n    final: valueEnumerable(args.length === 0),\n    transitions: valueEnumerable(transitionsToMap(transitions))\n  };\n  if(immediates.length) {\n    desc.immediates = valueEnumerable(immediates);\n    desc.enter = valueEnumerable(enterImmediate);\n  }\n  return create(stateType, desc);\n}\n\nlet invokePromiseType = {\n  enter(machine, service, event) {\n    this.fn.call(service, service.context, event)\n      .then(data => service.send({ type: 'done', data }))\n      .catch(error => service.send({ type: 'error', error }));\n    return machine;\n  }\n};\nlet invokeMachineType = {\n  enter(machine, service, event) {\n    service.child = interpret(this.machine, s => {\n      service.onChange(s);\n      if(service.child == s && s.machine.state.value.final) {\n        delete service.child;\n        service.send({ type: 'done', data: s.context });\n      }\n    }, service.context, event);\n    if(service.child.machine.state.value.final) {\n      let data = service.child.context;\n      delete service.child;\n      return transitionTo(service, machine, { type: 'done', data }, this.transitions.get('done'));\n    }\n    return machine;\n  }\n};\nexport function invoke(fn, ...transitions) {\n  let t = valueEnumerable(transitionsToMap(transitions));\n  return machine.isPrototypeOf(fn) ?\n    create(invokeMachineType, {\n      machine: valueEnumerable(fn),\n      transitions: t\n    }) :\n    create(invokePromiseType, {\n      fn: valueEnumerable(fn),\n      transitions: t\n    });\n}\n\nlet machine = {\n  get state() {\n    return {\n      name: this.current,\n      value: this.states[this.current]\n    };\n  }\n};\n\nexport function createMachine(current, states, contextFn = empty) {\n  if(typeof current !== 'string') {\n    contextFn = states || empty;\n    states = current;\n    current = Object.keys(states)[0];\n  }\n  if(d._create) d._create(current, states);\n  return create(machine, {\n    context: valueEnumerable(contextFn),\n    current: valueEnumerable(current),\n    states: valueEnumerable(states)\n  });\n}\n\nfunction transitionTo(service, machine, fromEvent, candidates) {\n  let { context } = service;\n  for(let { to, guards, reducers } of candidates) {  \n    if(guards(context, fromEvent)) {\n      service.context = reducers.call(service, context, fromEvent);\n\n      let original = machine.original || machine;\n      let newMachine = create(original, {\n        current: valueEnumerable(to),\n        original: { value: original }\n      });\n\n      let state = newMachine.state.value;\n      return state.enter(newMachine, service, fromEvent);\n    }\n  }\n}\n\nfunction send(service, event) {\n  let eventName = event.type || event;\n  let { machine } = service;\n  let { value: state } = machine.state;\n  \n  if(state.transitions.has(eventName)) {\n    return transitionTo(service, machine, event, state.transitions.get(eventName)) || machine;\n  }\n  return machine;\n}\n\nlet service = {\n  send(event) {\n    this.machine = send(this, event);\n    \n    // TODO detect change\n    this.onChange(this);\n  }\n};\n\nexport function interpret(machine, onChange, initialContext, event) {\n  let s = Object.create(service, {\n    machine: valueEnumerableWritable(machine),\n    context: valueEnumerableWritable(machine.context(initialContext, event)),\n    onChange: valueEnumerable(onChange)\n  });\n  s.send = s.send.bind(s);\n  s.machine = s.machine.state.value.enter(s.machine, s, event);\n  return s;\n} \n","import { transition, state, createMachine } from 'robot3';\nexport const GameMachine = createMachine('IDLE', {\n    IDLE: state(transition('start', 'PLAYING')),\n    PLAYING: state(transition('pause', 'PAUSED'), transition('end', 'FINISHED')),\n    PAUSED: state(transition('resume', 'PLAY')),\n    FINISHED: state()\n});\n","import { interpret } from 'robot3';\nimport { GameMachine } from './types';\nclass Game {\n    constructor(wordsList, stateListener) {\n        this._fallTime = 2 * 1000; // drop a word every 2 seconds\n        this._score = 0;\n        this._fallingWords = [];\n        this._wordsList = wordsList;\n        this.state = interpret(GameMachine, stateListener);\n    }\n    start() {\n        this.state.send('start');\n        this._interval = setInterval(this.addWord.bind(this), this._fallTime);\n    }\n    get fallingWords() {\n        return this._fallingWords;\n    }\n    set fallingWords(fallingWords) {\n        this._fallingWords = fallingWords;\n        this._wordsListener(fallingWords);\n    }\n    get score() {\n        return this._score;\n    }\n    set score(x) {\n        this._score = x;\n        this._scoreListener(x);\n    }\n    handle(typedWord) {\n        const word = typedWord.toLocaleLowerCase();\n        const valid = this.isValid(word);\n        if (valid) {\n            const removed = this.removeWord(word);\n            this.applyScore(removed);\n            clearInterval(removed.timeout);\n        }\n        return valid;\n    }\n    isValid(word) {\n        return this.fallingWords.some(w => w.value == word);\n    }\n    removeWord(word) {\n        const index = this.fallingWords.findIndex(w => w.value == word);\n        const toRemove = this.fallingWords[index];\n        this.fallingWords = this.fallingWords.filter((_, i) => i != index);\n        clearInterval(toRemove.timeout);\n        return toRemove;\n    }\n    applyScore(word) {\n        this.score += Math.round(word.value.length * (100 / word.duration));\n    }\n    addWord() {\n        const newWord = this.generateWord();\n        this.fallingWords = [...this.fallingWords, newWord];\n    }\n    generateWord() {\n        const i = Math.floor(Math.random() * this._wordsList.length);\n        const value = this._wordsList[i];\n        const x = this.randomPos();\n        const duration = 10;\n        return {\n            x,\n            value,\n            duration,\n            id: value + x,\n            timeout: setTimeout(this.loose.bind(this), duration * 1000)\n        };\n    }\n    loose() {\n        this.state.send('end');\n        clearInterval(this._interval);\n        for (let word of this.fallingWords)\n            this.removeWord(word.value);\n    }\n    randomPos() {\n        return this.randint(-100, 100);\n    }\n    randint(lowerBound, upperBound) {\n        const delta = upperBound - lowerBound;\n        return Math.round(Math.random() * delta) + lowerBound;\n    }\n    registerWordsListener(listener) {\n        this._wordsListener = listener;\n    }\n    registerScoreListener(listener) {\n        this._scoreListener = listener;\n    }\n}\nexport default Game;\n","<script lang=\"ts\">\n    import Playground from \"./Playground.svelte\";\n    import StartMenu from \"./StartMenu.svelte\";\n    import EndScreen from \"./EndScreen.svelte\";\n    import Game from \"../ts/Game\";\n    import type { GameService, States, words } from \"../ts/types\";\n    import { getScores, saveScore } from \"../ts/utils\";\n\n    export let wordsList: words;\n\n    let state: States = \"IDLE\";\n\n    const handleStateChange = (gs: GameService) => {\n        state = gs.machine.current;\n\n        if (state == \"FINISHED\") saveScore(game.score);\n    };\n\n    let game = new Game(wordsList, handleStateChange);\n\n    const handleMenu = () => {\n        state = \"IDLE\";\n        game = new Game(wordsList, handleStateChange);\n    };\n\n    const handlePlayAgain = () => {\n        game = new Game(wordsList, handleStateChange);\n        game.start();\n    };\n</script>\n\n{#if state == 'IDLE'}\n    <StartMenu on:start={() => game.start()} />\n{:else if state == 'PLAYING'}\n    <Playground {game} />\n{:else if state == 'FINISHED'}\n    <EndScreen\n        scores={getScores()}\n        on:menu={handleMenu}\n        on:playagain={handlePlayAgain} />\n{/if}\n","<script lang=\"ts\">\n    import Loader from \"./components/Loader.svelte\";\n    import { getWords } from \"./ts/utils\";\n    import Game from \"./components/Game.svelte\";\n\n    const wordsPromise = getWords();\n</script>\n\n<style>\n    :global(:root) {\n        --color-primary: #3498db;\n        --color-secondary: #fff;\n        --color-secondary-transparent: rgba(255, 255, 255, 0.1);\n        --font-family: \"Montserrat\";\n        --transition: 0.3s;\n        --radius-high: 500em;\n    }\n\n    :global(*) {\n        box-sizing: border-box;\n    }\n\n    :global(body) {\n        background: var(--color-primary);\n        margin: 0;\n        font-family: var(--font-family), sans-serif;\n        color: var(--color-secondary);\n        overflow: hidden;\n    }\n\n    :global(button) {\n        border: none;\n        outline: none;\n        cursor: pointer;\n    }\n\n    :global(button, input) {\n        color: var(--color-secondary);\n        outline: none;\n        border: none;\n    }\n\n    :global(.hidden) {\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .error {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        text-align: center;\n    }\n</style>\n\n{#await wordsPromise}\n    <Loader />\n{:then wordsList}\n    <Game {wordsList} />\n{:catch e}\n    <p class=\"error\">An error occurred: {e.message}</p>\n{/await}\n","import App from \"./App.svelte\";\nnew App({\n    target: document.body\n});\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","createEventDispatcher","callbacks","$$","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_out_transition","params","animation_name","config","running","group","go","easing","tick","css","start_time","end_time","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","abs","start","end","outro_and_destroy_block","lookup","key","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","instance","create_fragment","not_equal","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","fade","linear","getComputedStyle","opacity","WORDS_URL","async","getWords","wordsList","JSON","parse","localStorage","getItem","fetch","json","fetchWordsList","setItem","stringify","getScores","last","parseInt","best","offset","title","viewBox","id","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","set","will_move","did_move","first","new_block","old_block","new_key","old_key","game","score","typedWord","invalidInput","fallingWords","registerWordsListener","updatedList","registerScoreListener","newScore","handleBlur","focus","handle","hidden","scores","valueEnumerable","enumerable","valueEnumerableWritable","writable","truthy","callBoth","par","self","args","apply","callForward","freeze","stack","def","caller","reduce","fnType","reduceType","guardType","bind","Type","arr","isPrototypeOf","makeTransition","to","guards","reducers","transitionType","immediateType","transition","enterImmediate","machine","service","transitionTo","immediates","transitionsToMap","transitions","stateType","enter","state","desc","final","current","states","fromEvent","candidates","original","newMachine","eventName","send","onChange","GameMachine","contextFn","_create","createMachine","IDLE","PLAYING","PAUSED","FINISHED","Game","stateListener","_fallTime","_score","_fallingWords","_wordsList","initialContext","s","interpret","_interval","setInterval","addWord","_wordsListener","_scoreListener","word","toLocaleLowerCase","valid","isValid","removed","removeWord","applyScore","clearInterval","timeout","some","w","findIndex","toRemove","_","round","newWord","generateWord","floor","random","randomPos","setTimeout","loose","randint","lowerBound","upperBound","delta","listener","handleStateChange","gs","localBest","toString","saveScore","message","info","token","resolved","needs_flush","blocks","mount","error","catch","hasCatch","pending","body"],"mappings":"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"}